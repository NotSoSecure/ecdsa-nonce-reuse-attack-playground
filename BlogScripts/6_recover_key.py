from tinyec.ec import SubGroup, Curve 
import hashlib 
import libnum 
  
field = SubGroup(2 ** 256 - 2 ** 32 - 2 ** 9 - 2 ** 8 - 2 ** 7 - 2 ** 6 - 2 ** 4 - 1, g=(108607064596551879580190606910245687803607295064141551927605737287325610911759, 6661302038839728943522144359728938428925407345457796456954441906546235843221), n=115792089237316195423570985008687907852837564279074904382605163141518161494337, h=1) 
curve = Curve(a=0, b=7, field=field, name='NonceReuseDemo') 
 
h1 = 103318048148376957923607078689899464500752411597387986125144636642406244063093 
r1 = 14470465806774453739433517577928848751229449575030160206465174372486679843557  
s1 = 16849201166224039805380852071480263116078675063542761125905569934558495435796 
  
h2 = 123423418048148376989543525467878689899464500752234234234243234144636642406244 
r2 = 14470465806774453739433517577928848751229449575030160206465174372486679843557  
s2 = 99914200622322518508474186255359721152936178974379819004639043883844248316147 
  
  
temp = libnum.invmod((s1-s2), curve.field.n) 
recovered_K=((h1-h2) * temp) % curve.field.n 
print ("\nRecovered K :=> " + str(recovered_K)) 
  
recovered_priv = (libnum.invmod(r1, curve.field.n) * ((s1 * recovered_K) - h1)) % curve.field.n 
print ("\nRecovered PrivateKey :=> " + str(recovered_priv)) 